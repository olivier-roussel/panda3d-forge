name: build-publish-panda3d

on:
  workflow_dispatch:
  pull_request:
    types:
    - opened
    - reopened
    paths:
      - '**/panda3d/.ci_support/*.yaml'

jobs:
  build-publish-panda3d:
    strategy:
      fail-fast: false
      matrix:
        target: [{platform: "linux-64", runner: "ubuntu-latest"},
                  {platform: "linux-aarch64", runner: "ubuntu-22.04-arm"},
                  {platform: "osx-64", runner: "macos-15-intel"},
                  {platform: "osx-arm64", runner: "macos-15"},
                  {platform: "win-64", runner: "windows-latest"}]
        python: ["3.10", "3.11", "3.12", "3.13", "3.14"]

    name: "Build and publish panda3d - ${{ matrix.target.platform }} (py${{ matrix.python }} ) conda packages on ${{ matrix.target.runner }}"
    runs-on: ${{ matrix.target.runner }}
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: conda-ci
        auto-update-conda: true
        miniforge-version: latest

    - name: Install conda environment
      shell: bash -l {0}
      run: |
        conda install anaconda-client rattler-build -c conda-forge
        conda config --set anaconda_upload no

    - name: Show conda config
      shell: bash -l {0}
      run: |
        conda info
        conda list
        conda config --show-sources
        conda config --show
        printenv | sort

    - name: Install MacOS SDK v10.13 / osx-x64
      shell: bash -l {0}
      if: contains(matrix.target.platform, 'osx-64')
      run: |
        curl -L --output MacOSX10.13.sdk.tar.xz https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX10.13.sdk.tar.xz
        mkdir $CONDA_PREFIX/SDKs
        tar -xf MacOSX10.13.sdk.tar.xz -C $CONDA_PREFIX/SDKs
        echo "CONDA_BUILD_SYSROOT=$CONDA_PREFIX/SDKs/MacOSX10.13.sdk" >> $GITHUB_ENV
        echo "OSX_SDK_DIR=$CONDA_PREFIX/SDKs" >> $GITHUB_ENV

    - name: Install MacOS SDK v11.0 / osx-arm64
      shell: bash -l {0}
      if: contains(matrix.target.platform, 'osx-arm64')
      run: |
        curl -L --output MacOSX11.0.sdk.tar.xz https://github.com/phracker/MacOSX-SDKs/releases/download/11.3/MacOSX11.0.sdk.tar.xz
        mkdir $CONDA_PREFIX/SDKs
        tar -xf MacOSX11.0.sdk.tar.xz -C $CONDA_PREFIX/SDKs
        echo "CONDA_BUILD_SYSROOT=$CONDA_PREFIX/SDKs/MacOSX11.0.sdk" >> $GITHUB_ENV
        echo "OSX_SDK_DIR=$CONDA_PREFIX/SDKs" >> $GITHUB_ENV

    - name: Build & publish panda3d conda package
      shell: bash -l {0}
      run: |
        cd conda/recipes/
        PKG_DIR=../../../../rattler-bld
        # remap given platform to config filename conda-forge standard
        CONFIG_FILE_SPEC=`echo  ${{ matrix.target.platform }} | sed 's/-/_/g'`_
        if [ ! -z "${{ matrix.python }}" ]; then
          CONFIG_FILE_SPEC=${CONFIG_FILE_SPEC}python${{ matrix.python }}
          echo "Config file spec: $CONFIG_FILE_SPEC for platform: ${{ matrix.target.platform }} (with python ${{ matrix.python }})"
        else
          echo "Config file spec: $CONFIG_FILE_SPEC for platform: ${{ matrix.target.platform }} (no python)"
        fi
        CONFIG_FILE=`find panda3d/.ci_support -name "$CONFIG_FILE_SPEC*"`
        if [ -z "$CONFIG_FILE" ] ; then
          echo "Could not find configuration matching specs $CONFIG_FILE_SPEC for panda3d"
          echo "It is likely some platform / python-version combination specified in the feedstock parent workflow is deprecated and not anymore supported by conda-forge"
          echo "Here is the list of available configuration files for the feedstock panda3d:"
          echo `ls -l panda3d/.ci_support`
          exit 1
        fi
        echo "Config file used for building package: $CONFIG_FILE"
        rattler-build build --recipe panda3d/recipe/recipe.yaml --variant-config $CONFIG_FILE --output-dir $PKG_DIR -c conda-forge 
        anaconda -t ${{ secrets.ANACONDA_TOKEN_P3D_FORGE }} upload -u panda3d-forge -l main $PKG_DIR/**/*.conda --force
