From 9061dd48328c1f25ab760422f6c535caf6be82be Mon Sep 17 00:00:00 2001
From: Olivier Roussel <olivier.roussel@inria.fr>
Date: Tue, 29 Apr 2025 10:23:15 +0200
Subject: [PATCH] force extern on both import and export

---
 dtool/src/dtoolbase/dtoolbase.h | 18 +++++++++---------
 1 file changed, 9 insertions(+), 9 deletions(-)

diff --git a/dtool/src/dtoolbase/dtoolbase.h b/dtool/src/dtoolbase/dtoolbase.h
index d89caf2a92..7f289933e5 100644
--- a/dtool/src/dtoolbase/dtoolbase.h
+++ b/dtool/src/dtoolbase/dtoolbase.h
@@ -504,15 +504,15 @@ typedef struct _object PyObject;
 #if defined(CPPPARSER) || defined(LINK_ALL_STATIC)
 #define EXPORT_TEMPL
 #define IMPORT_TEMPL
-#elif defined(_MSC_VER)
-/* Nowadays, we'd define both of these as "extern" in all cases, so that
-   the header file always marks the symbol as "extern" and the .cxx file
-   explicitly instantiates it.  However, MSVC versions before 2013 break
-   the spec by explicitly disallowing it, so we have to instantiate the
-   class from the header file.  Fortunately, its linker is okay with the
-   duplicate template instantiations that this causes. */
-#define EXPORT_TEMPL
-#define IMPORT_TEMPL extern
+// #elif defined(_MSC_VER)
+// /* Nowadays, we'd define both of these as "extern" in all cases, so that
+//    the header file always marks the symbol as "extern" and the .cxx file
+//    explicitly instantiates it.  However, MSVC versions before 2013 break
+//    the spec by explicitly disallowing it, so we have to instantiate the
+//    class from the header file.  Fortunately, its linker is okay with the
+//    duplicate template instantiations that this causes. */
+// #define EXPORT_TEMPL
+// #define IMPORT_TEMPL extern
 #else
 #define EXPORT_TEMPL extern
 #define IMPORT_TEMPL extern
-- 
2.34.1

